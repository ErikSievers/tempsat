<?php

define('SATELLITE_CONFIG_VAR', 'satellite_config');

include_once 'satellite_settings.esn_cas_regex.class';

/**
 * Implements hook_permission()
 */
function satellite_settings_permission() {
  return array(
    'administer satellite settings' => array(
      'title' => t('Administer ESN Satellite settings'),
      'description' => t('Change ESN Satellite settings.'),
    ),
  );
}

/*
 * Implements hook_menu()
 */
function satellite_settings_menu() {
  $items = array();

  $items['admin/settings/satellite'] = array(
    'title' => 'ESN Satellite',
    'access arguments' => array('administer satellite settings'),
    'access callback' => 'satellite_settings_menu_access_callback', 
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/satellite/galaxy'] = array(
    'title' => 'Galaxy integration',
    'description' => 'Configure your country, section, and permissions',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('satellite_settings_admin'),
    'access arguments' => array('administer satellite settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}
/*
 * Implements hook_menu()
 */
function satellite_settings_menu_access_callback() {
  // return true if the user has at least one of the permissions
  return (array_sum(array_map('user_access', func_get_args())) > 0);
}


/**
* Implements hook_node_grants()
*/
function satellite_settings_block_info() {
  // The address block
  $blocks['address'] = array(
    'info' => t('Address from Galaxy'),
  );
  return $blocks;
}

/**
* Implements hook_block_view()
*/
function satellite_settings_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'address':
      $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
      $block['subject'] = t('Address');
      $block['content'] = nl2br(check_plain(variable_get('satellite_settings_address', $satellite_settings['sectionAddress'] )));
      break;
  }
  return $block;
}

/**
* Implements hook_block_configure()
*/
function satellite_settings_block_configure($delta = '') {
  $form = array();
  if ($delta == 'address') {
    $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
    $form['satellite_settings_address'] = array(
      '#type' => 'textarea',
      '#title' => t('Section Address'),
      '#description' => t ('This is the address displayed on the bottom of the Satellite. Consider updating in on Galaxy!'),
      '#default_value' => variable_get('satellite_settings_address', $satellite_settings['sectionAddress'] ),
    );
  }
  return $form;
}

/**
* Implements hook_block_save()
*/
function satellite_settings_block_save($delta = '', $edit = array()) {
  if ($delta == 'address') {
    if (!$edit['satellite_settings_address']) {
      variable_del('satellite_settings_address');
    }
    else {
      variable_set('satellite_settings_address', $edit['satellite_settings_address']);
    }
  }
}


/**
 * Satellite Settings form
 */
function satellite_settings_configuration_form() {

  $t = get_t();

  $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
  
  // Use the list of Sections and ESN countries
  module_load_include('inc', 'esn_galaxy_api', 'esn_galaxy_api.functions');

  $form['section_selection'] = array(
    '#type' => 'fieldset',
    '#title' => $t('Section Selection'),
    '#collapsible' => false,
    '#collapsed' => false,
    '#class' => array('form-wrapper'),
  );

  $form['section_selection']['satellite_settings_scope'] = array(
    '#type' => 'select',
    '#title' => $t('Scope of the Satellite'),
    '#required' => false,
    '#empty_value' => '',
    '#options' => array(
        'national' => $t('National'), 
        'local' => $t('Local Section'),
      ),
    '#default_value' => $satellite_settings['scope'],
    '#description' => $t('Please choose here what you want to use the Satellite for.'),
  );

  $form['section_selection']['satellite_settings_countrycode'] = array(
    '#type' => 'select',
    '#title' => $t('Your country'),
    '#empty_value' => '',
    '#options' => esn_galaxy_api_countries(),
    '#default_value' => $satellite_settings['countryCode'],
    '#states' => array(
        'visible' => array(
          ':input[name="satellite_settings_scope"]' => array('value' => 'national'),
        ),
        'required' => array(
          ':input[name="satellite_settings_scope"]' => array('value' => 'national'),
        ),
      ),
  );

  $form['section_selection']['satellite_settings_sectioncode'] = array(
    '#type' => 'select',
    '#title' => $t('Your section'),
    '#options' => esn_galaxy_api_sections(),
    '#default_value' => $satellite_settings['sectionCode'],
    '#prefix' => '<div id="section-selection-div">',
    '#suffix' => '</div>',
    '#empty_value' => '',
    '#states' => array(
        'visible' => array(
          ':input[name="satellite_settings_scope"]' => array('value' => 'local'),
        ),
        'required' => array(
          ':input[name="satellite_settings_scope"]' => array('value' => 'local'),
        ),
      ),
  );
  
  $form['cas_permissions'] = array(
    '#type' => 'fieldset',
    '#title' => $t('Satellite Permissions'),
    '#collapsible' => false,
    '#collapsed' => false,
    '#prefix' => '<div id="cas-permissions-div">',
    '#suffix' => '</div>',
    '#class' => array('form-wrapper'),
  );

  // We need to make sure that CAS could be enabled.
  // phpCAS depends on curl which may not be available on cheap webhosts.
  $pass = FALSE;
  if (function_exists('curl_version')) {
    $curl_version = curl_version();
    if ((version_compare($curl_version['version'], '7.5.0') >= 0) && ($curl_version['features'] & CURL_VERSION_SSL)) {
      $pass = TRUE;
    }
  }
  if ($pass) {
    $form['cas_permissions']['localwebmaster_admin'] = array(
      '#type' => 'checkbox',
      '#title' => $t('Give the Local Webmaster administrator access.'),
      '#default_value' => $satellite_settings['permissions']['localWebmasterAdmin'],
      '#states' => array(
          'visible' => array(
            ':input[name="satellite_settings_scope"]' => array('value' => 'local'),
          ),
          
        ),
    );
    $form['cas_permissions']['nationalwebmaster_admin'] = array(
      '#type' => 'checkbox',
      '#title' => $t('Give the National Webmaster administrator access.'),
      '#default_value' => $satellite_settings['permissions']['nationalWebmasterAdmin'],
      '#states' => array(
          'visible' => array(
            ':input[name="satellite_settings_scope"]' => array('!value' => ''),
          ),
        ),
    );
    $form['cas_permissions']['international_admin'] = array(
      '#type' => 'checkbox',
      '#title' => $t('Give the International WPA and selected IT Committee members access to help you.'),
      '#default_value' => $satellite_settings['permissions']['internationalAdmin'],
    );
    $form['cas_permissions']['localboard_editor'] = array(
      '#type' => 'checkbox',
      '#title' => $t('Give the Local Board editor access.'),
      '#default_value' => $satellite_settings['permissions']['localBoardEditor'],
      '#states' => array(
          'visible' => array(
            ':input[name="satellite_settings_scope"]' => array('value' => 'local'),
          ),
        ),
    );
    $form['cas_permissions']['nationalboard_editor'] = array(
      '#type' => 'checkbox',
      '#title' => $t('Give the National Board editor access.'),
      '#default_value' => $satellite_settings['permissions']['nationalBoardEditor'],
      '#states' => array(
          'visible' => array(
            ':input[name="satellite_settings_scope"]' => array('!value' => ''),
          ),
        ),
    );
  }
  else {
    $form['cas_permissions']['no_cas'] = array(
      '#markup' => t('The php extension "curl" is not available or too old, without it the Galaxy login does not work.'),
    );
  
    $form['cas_permissions']['localwebmaster_admin'] = array('#type' => 'hidden', '#value' => 0);
    $form['cas_permissions']['nationalwebmaster_admin'] = array('#type' => 'hidden', '#value' => 0);
    $form['cas_permissions']['international_admin'] = array('#type' => 'hidden', '#value' => 0);
    $form['cas_permissions']['localboard_editor'] = array('#type' => 'hidden', '#value' => 0);
    $form['cas_permissions']['nationalboard_editor'] = array('#type' => 'hidden', '#value' => 0);
  }

  return $form;
}

/**
 * Satellite Settings form validation
 */
function satellite_settings_configuration_form_validate(&$form_state) {
  $validSection =
    ($form_state['values']['satellite_settings_scope'] != 'local') ||
    !empty($form_state['values']['satellite_settings_sectioncode']);
  $validCountry =
    ($form_state['values']['satellite_settings_scope'] != 'national') ||
    !empty($form_state['values']['satellite_settings_countrycode']);

  $t = get_t();
  if (!$validSection) {
    form_set_error('section', $t('You have to choose a section!'));
  }
  if (!$validCountry) {
    form_set_error('section', $t('You have to choose a country!'));
  }

  return $validSection && $validCountry;
}


/**
 * Callback for the administration form
 */
function satellite_settings_admin($form, &$form_state) {

  $form = satellite_settings_configuration_form();
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Configuration'),
    '#class' => array('form-submit')
  );
  $form['#submit'][] = 'satellite_settings_admin_submit';

  return $form;
}

/**
 * administration form validation
 */
function satellite_settings_admin_validate($form, &$form_state) {
  return satellite_settings_configuration_form_validate($form_state);
}

/**
 * administration form submission
 */
function satellite_settings_admin_submit($form, &$form_state) {
  $satellite_settings = satellite_settings_parse_admin_form($form_state);
  satellite_settings_configure_cas($satellite_settings);
  satellite_settings_save_settings($satellite_settings);
  drupal_set_message('The Settings have been saved');
}

/**
 * administration form treatment
 */
function satellite_settings_save_settings($satellite_settings) {
  
  $sectioncode = $satellite_settings['sectionCode'];
  $countrycode = $satellite_settings['countryCode'];
  
  switch ($satellite_settings['scope']) {
    case 'local':
      $section_attributes = esn_galaxy_api_section_attributes($sectioncode, array('sectionname', 'postaladdress'));
      $satellite_settings['sectionName'] = $section_attributes['sectionname'];
      $satellite_settings['sectionAddress'] = $section_attributes['postaladdress'];
      // set country code too
    case 'national':
      $satellite_settings['countryCode'] = $countrycode;
      $country_attributes = esn_galaxy_api_country_attributes($countrycode, array('esncn'));
      $satellite_settings['countryName'] = $country_attributes['esncn'];
  }

  variable_set(SATELLITE_CONFIG_VAR, $satellite_settings);
}


/**
 * Set cas_roles_relations with the appropriate regular expressions
 */
function satellite_settings_configure_cas($satellite_settings) {
  $cas_config = new ESN_CAS_Regex();

  $cas_roles = variable_get('cas_roles_relations', array());

  $cas_roles['administrator'] = $cas_config->mkAdministratorRegex($satellite_settings);
  $cas_roles['editor'] = $cas_config->mkEditorRegex($satellite_settings);
  $cas_roles['member'] = $cas_config->mkMemberRegex($satellite_settings);

  variable_set('cas_roles_relations', $cas_roles);
}

function satellite_settings_parse_admin_form($form_state) {
  $satellite_settings = satellite_settings_default_settings();
  
  $scope = $form_state['values']['satellite_settings_scope'];
  $satellite_settings['scope'] = $scope;
  if ($scope == 'local') {
    $satellite_settings['sectionCode'] = $form_state['values']['satellite_settings_sectioncode'];
    $satellite_settings['countryCode'] = substr($form_state['values']['satellite_settings_sectioncode'], 0, 2);
  }
  if ($scope == 'national') {
    $satellite_settings['countryCode'] = $form_state['values']['satellite_settings_countrycode'];
  }
  
  
  $satellite_settings['permissions'] = array(
    'localWebmasterAdmin' => ($scope == 'local' ? $form_state['values']['localwebmaster_admin'] : 0),
    'nationalWebmasterAdmin' => ($scope != '' ? $form_state['values']['nationalwebmaster_admin'] : 0),
    'internationalAdmin' => $form_state['values']['international_admin'],
    'localBoardEditor' => ($scope == 'local' ? $form_state['values']['localboard_editor'] : 0),
    'nationalBoardEditor' => ($scope != '' ? $form_state['values']['nationalboard_editor'] : 0),
  );

  return $satellite_settings;
}


function satellite_settings_default_settings() {
  $satellite_settings = array(
    'scope' => '',
    'countryCode' => '',
    'countryName' => '',
    'sectionCode' => '',
    'sectionName' => '',
    'sectionAddress' => '',
    'permissions' => array( 
      'localWebmasterAdmin' => TRUE,
      'nationalWebmasterAdmin' => TRUE,
      'internationalAdmin' => TRUE,
      'localBoardEditor' => FALSE,
      'nationalBoardEditor' => FALSE,
    ),
  );
  return $satellite_settings;
}


/**
 * return the scope of the Satellite (local, national, international)
 */
function satellite_settings_get_scope() {
  $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
  return $satellite_settings['scope'];
}

/**
 * return the section code or country code
 */
function satellite_settings_get_code() {
  $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
  switch ($satellite_settings['scope']) {
    case 'local':
      return $satellite_settings['sectionCode'];
    case 'national':
      return $satellite_settings['countryCode'];
    default:
      return '';
  }
}

/**
 * return the section name or country mane
 */
function satellite_settings_get_name() {
  $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
  switch ($satellite_settings['scope']) {
    case 'local':
      return $satellite_settings['sectionName'];
    case 'national':
      return $satellite_settings['countryName'];
    default:
      return '';
  }
}

/**
 * return the section address (country address is not implemented yet
 */
function satellite_settings_get_address() {
  $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
  return ($satellite_settings['sectionAddress'] ? $satellite_settings['sectionAddress'] : '');
}

/**
 * return the country name even if its a section
 */
function satellite_settings_get_countryname() {
  $satellite_settings = variable_get(SATELLITE_CONFIG_VAR, satellite_settings_default_settings());
  return ($satellite_settings['countryName'] ? $satellite_settings['countryName'] : '');
}


